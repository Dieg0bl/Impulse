version: '3.8'

services:
  # Database
  mysql:
    image: mysql:8.0
    container_name: impulse-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-impulse_root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-impulse}
      MYSQL_USER: ${MYSQL_USER:-impulse_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-impulse_pass}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - impulse-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: impulse-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - impulse-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: impulse-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-impulse}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-impulse_pass}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-impulse}
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - impulse-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: impulse-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-impulse_admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-impulse_pass}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    networks:
      - impulse-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ClamAV Antivirus
  clamav:
    image: clamav/clamav:latest
    container_name: impulse-clamav
    restart: unless-stopped
    ports:
      - "${CLAMAV_PORT:-3310}:3310"
    volumes:
      - clamav_data:/var/lib/clamav
    networks:
      - impulse-network
    healthcheck:
      test: ["CMD", "clamdcheck"]
      interval: 60s
      timeout: 30s
      retries: 3

  # Backend Application
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: impulse-backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE:-impulse_master}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-impulse_user}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-impulse_pass}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER:-impulse}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-impulse_pass}
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-impulse_admin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-impulse_pass}
      CLAMAV_HOST: clamav
      CLAMAV_PORT: 3310
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      AES_SECRET: ${AES_SECRET:-your-32-character-aes-key-here}
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
      clamav:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - impulse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: impulse-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8080/api}
      VITE_APP_ENV: ${VITE_APP_ENV:-docker}
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - impulse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: impulse-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - impulse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  minio_data:
    driver: local
  clamav_data:
    driver: local

networks:
  impulse-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

spring:
  application:
    name: impulse-backend
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:impulse_master}?useSSL=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:impulse_user}
    password: ${DB_PASSWORD:impulse_pass}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        '[format_sql]': true
        '[show_sql]': ${SHOW_SQL:false}
        '[use_sql_comments]': true
        jdbc:
          '[batch_size]': 25
        '[order_inserts]': true
        '[order_updates]': true
    show-sql: ${SHOW_SQL:false}
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080}
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  cache:
    type: redis
    redis:
      time-to-live: 3600000

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api/v1
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on-param
  shutdown: graceful

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops,loggers
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
    metrics:
      access: unrestricted
  prometheus:
    metrics:
      export:
        enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

logging:
  level:
    '[root]': INFO
    '[com.impulse]': DEBUG
    '[org.springframework.security]': DEBUG
    '[org.hibernate.SQL]': DEBUG
    '[org.hibernate.type.descriptor.sql.BasicBinder]': TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/impulse.log
    max-size: 10MB
    max-history: 30

impulse:
  security:
    jwt:
      secret: ${JWT_SECRET:impulse-super-secret-key-for-jwt-tokens-2024}
      expiration: ${JWT_EXPIRATION:86400000} # 24 hours
      refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true
  file:
    upload:
      max-size: ${FILE_MAX_SIZE:10MB}
      temp-dir: ${TEMP_DIR:/tmp/impulse}
    storage:
      provider: ${STORAGE_PROVIDER:local} # local, s3, gcp
      local:
        base-path: ${STORAGE_LOCAL_PATH:/app/uploads}
      s3:
        bucket: ${S3_BUCKET:impulse-uploads}
        region: ${S3_REGION:eu-west-1}
  rate-limit:
    enabled: true
    requests-per-minute: ${RATE_LIMIT_RPM:60}
  features:
    gamification: ${FEATURE_GAMIFICATION:true}
    mentoring: ${FEATURE_MENTORING:true}
    referrals: ${FEATURE_REFERRALS:true}
    notifications: ${FEATURE_NOTIFICATIONS:true}
  compliance:
    gdpr:
      retention-days: ${GDPR_RETENTION_DAYS:2555} # 7 years
    dsa:
      moderation-threshold: ${DSA_MODERATION_THRESHOLD:0.7}
  monitoring:
    sentry:
      dsn: ${SENTRY_DSN}
      environment: ${SENTRY_ENV:development}
    datadog:
      api-key: ${DATADOG_API_KEY}
      application-key: ${DATADOG_APP_KEY}

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:mysql://localhost:3306/impulse_master?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: impulse_user
    password: ${DB_PASSWORD:ImpulseSecure2024!@#}
  jpa:
    show-sql: true
    properties:
      hibernate:
        '[format_sql]': true
  mail:
    host: localhost
    port: 1025
    username:
    password:
  data:
    redis:
      host: localhost
      port: 6379
      password:

impulse:
  security:
    jwt:
      secret: impulse-dev-secret-key-for-jwt-tokens-2024-secure
  file:
    storage:
      local:
        base-path: /tmp/impulse/uploads

---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  flyway:
    enabled: false
  data:
    redis:
      host: localhost
      port: 6379
  mail:
    host: localhost
    port: 1025

impulse:
  security:
    jwt:
      secret: impulse-test-secret-key-for-jwt-tokens-2024
  file:
    storage:
      local:
        base-path: /tmp/impulse/test-uploads

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
  jpa:
    show-sql: false

logging:
  level:
    '[root]': WARN
    '[com.impulse]': INFO

management:
  endpoint:
    health:
      show-details: never

impulse:
  monitoring:
    sentry:
      environment: production

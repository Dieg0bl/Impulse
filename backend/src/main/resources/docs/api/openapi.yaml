openapi: 3.0.3
info:
  title: IMPULSE Platform API
  description: Enterprise-grade platform API for challenges, gamification, and social features
  version: 1.0.0
  contact:
    name: IMPULSE Team
    email: support@impulse.com

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://api.impulse.com
    description: Production server

security:
  - bearerAuth: []

paths:
  /api/usuarios:
    get:
      summary: Get all users
      description: Retrieve a paginated list of users
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
          description: Page number (0-based)
        - name: size
          in: query
          schema:
            type: integer
            default: 20
          description: Page size
        - name: sort
          in: query
          schema:
            type: string
            default: createdAt,desc
          description: Sort criteria
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPageResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create a new user
      description: Create a new user account
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/usuarios/{id}:
    get:
      summary: Get user by ID
      description: Retrieve a specific user by their ID
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
        nombre:
          type: string
        apellidos:
          type: string
        photoUrl:
          type: string
          format: uri
        locale:
          type: string
        timezone:
          type: string
        estado:
          type: string
          enum: [ACTIVO, INACTIVO, SUSPENDIDO, ELIMINADO]
        defaultVisibility:
          type: string
          enum: [private, validators, public]
        verifiedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateUserRequest:
      type: object
      required:
        - email
        - nombre
        - password
      properties:
        email:
          type: string
          format: email
        nombre:
          type: string
          minLength: 2
          maxLength: 100
        apellidos:
          type: string
          maxLength: 150
        password:
          type: string
          minLength: 8
        locale:
          type: string
          default: es-ES
        timezone:
          type: string
          default: Europe/Madrid

    UserPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        pageable:
          $ref: '#/components/schemas/Pageable'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
        size:
          type: integer
        number:
          type: integer
        first:
          type: boolean
        last:
          type: boolean

    Pageable:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        sort:
          type: array
          items:
            type: string

    ErrorResponse:
      type: object
      required:
        - code
        - message
        - correlationId
      properties:
        code:
          type: string
          enum:
            - VALIDATION_ERROR
            - NOT_FOUND
            - FORBIDDEN
            - CONFLICT
            - RATE_LIMITED
            - TIMEOUT
            - INTERNAL_ERROR
        message:
          type: string
        correlationId:
          type: string
        details:
          type: object

  responses:
    BadRequest:
      description: Bad request - validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Forbidden:
      description: Access forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Conflict:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
